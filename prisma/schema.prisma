// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  creatorVerified Boolean   @default(false)
  role            Role      @default(USER)
  accounts        Account[]
  sessions        Session[]
  Auction         Auction[]
  Tip             Tip[]
  Item            Item[]
}

model Auction {
  id              String   @id @default(cuid())
  title           String
  description     String?
  image           String?
  minTip          Float    @default(1)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  startAt         DateTime @default(now())
  endAt           DateTime
  live            Boolean  @default(false)
  creator         User     @relation(fields: [creatorId], references: [id])
  creatorId       String
  item            Item?    @relation(fields: [itemId], references: [id])
  itemId          String?
  totalTipsAmount Float    @default(0)
  totalTips       Int      @default(0)
  bids            Tip[]
}

model Tip {
  id            String   @id @default(cuid())
  amount        Float
  name          String?
  email         String
  nickname      String?
  message       String?
  paymentMethod String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User?    @relation(fields: [userId], references: [id])
  userId        String?
  auction       Auction  @relation(fields: [auctionId], references: [id])
  auctionId     String
}

model Item {
  id        String    @id @default(cuid())
  name      String
  image     String?
  link      String?
  category  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  creator   User      @relation(fields: [creatorId], references: [id])
  creatorId String
  Auction   Auction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  ADMIN
  CREATOR
  USER
}
